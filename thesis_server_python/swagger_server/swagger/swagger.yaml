openapi: 3.0.3
info:
  title: Thesis Management Software
  description: ""
  version: 0.0.1
servers:
- url: /api/v0
tags:
- name: theses
  description: Create and view theses
- name: comments
  description: Post and view comments for theses
- name: likes
  description: Track likes and dislikes of theses
- name: users
  description: Manage users
paths:
  /users:
    get:
      tags:
      - users
      summary: List all users
      operationId: users_get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - users
      summary: Create one or more users
      description: Calling this endpoint will also generate a registration token resource
        for every user. Each registration token will be emailed to the respective
        user automatically.
      operationId: users_post
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/users_body"
      responses:
        "204":
          description: Success. A list of all new user ids is returned. The order
            of users is retained from the request body array.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_204"
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/{userId}:
    get:
      tags:
      - users
      summary: Get information about a specific user
      operationId: users_user_id_get
      parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/UserId"
      - name: registration_token
        in: query
        description: A user's registration token. This allows requests to this endpoint
          for a user with the same registration_token without any authentication.
        required: false
        style: form
        explode: true
        schema:
          $ref: "#/components/schemas/RegistrationToken"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "401":
          description: "Either a `registration_token` was provided, but it is not\
            \ authorized to access the user with the requested `id` or no authentication\
            \ was provided at all."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User with given `id` could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.users_controller
    put:
      tags:
      - users
      summary: Update information for a specific user
      operationId: users_user_id_put
      parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/UserId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success. The newly updated user information is returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "404":
          description: User with given `id` could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.users_controller
    delete:
      tags:
      - users
      summary: Delete a specific user
      operationId: users_user_id_delete
      parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/UserId"
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_204_1"
        "404":
          description: User with given `id` could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/{userId}/regenerate_registration_token:
    post:
      tags:
      - users
      summary: Regenerate a specific user's registration token
      description: This endpoint is used to regenerate a new registration token for
        a specific user that exists already. Calling this endpoint also causes the
        user to receive an email notification with the new registration token.
      operationId: users_user_id_regenerate_registration_token_post
      parameters:
      - name: userId
        in: path
        description: The user id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/UserId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
        "404":
          description: User with given `id` could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: User has registered already. Registered users are not eligible
            for new registration tokens Registered users are not eligible for new
            registration tokens.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /theses:
    get:
      tags:
      - theses
      summary: List theses summaries
      description: "Note: This endpoint might allow for filters in the future."
      operationId: theses_get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ThesisSummary"
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.theses_controller
    post:
      tags:
      - theses
      summary: Create a new thesis for current user
      operationId: theses_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Thesis"
      responses:
        "201":
          description: The thesis was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
        "409":
          description: A thesis already exists for the current user. Only one thesis
            can exist per user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.theses_controller
  /theses/mine:
    get:
      tags:
      - theses
      summary: Get information for the thesis of the current user
      operationId: theses_mine_get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
        "404":
          description: No thesis could be found for the current user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.theses_controller
    put:
      tags:
      - theses
      summary: Update information for the thesis of the current user
      operationId: theses_mine_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Thesis"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
        "404":
          description: Thesis with does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.theses_controller
  /theses/{id}:
    get:
      tags:
      - theses
      summary: Get information for a specific thesis
      operationId: theses_id_get
      parameters:
      - name: id
        in: path
        description: The thesis id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/ThesisId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
        "404":
          description: Thesis with does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.theses_controller
    put:
      tags:
      - theses
      summary: Update information for a specific thesis
      operationId: theses_id_put
      parameters:
      - name: id
        in: path
        description: The thesis id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/ThesisId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Thesis"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
        "404":
          description: Thesis with does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.theses_controller
  /theses/{id}/comments:
    get:
      tags:
      - comments
      summary: List all comments for specific thesis
      operationId: theses_id_comments_get
      parameters:
      - name: id
        in: path
        description: The thesis id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/ThesisId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
        "404":
          description: Thesis with does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.comments_controller
    post:
      tags:
      - comments
      summary: Post a new comment for a specific thesis
      operationId: theses_id_comments_post
      parameters:
      - name: id
        in: path
        description: The thesis id
        required: true
        style: simple
        explode: false
        schema:
          $ref: "#/components/schemas/ThesisId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201_1"
        "404":
          description: Thesis with does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-openapi-router-controller: swagger_server.controllers.comments_controller
components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          example: An error has occured.
    Thesis:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ThesisId"
        topic:
          type: string
          example: Thesis mangagement systems and their importance for universities
        student:
          $ref: "#/components/schemas/Thesis_student"
        preparationPeriod:
          $ref: "#/components/schemas/Thesis_preparationPeriod"
        partnerCompany:
          $ref: "#/components/schemas/Thesis_partnerCompany"
        operationalLocation:
          $ref: "#/components/schemas/Thesis_operationalLocation"
        inCompanySupervisor:
          $ref: "#/components/schemas/Thesis_inCompanySupervisor"
        excludeSupervisorsFromCompanies:
          type: array
          example:
          - Universität Mannheim
          items:
            type: string
      example:
        preparationPeriod:
          from: 2024-06-01T00:00:00+0000
          to: 2025-01-01T23:59:59+0000
        excludeSupervisorsFromCompanies:
        - Universität Mannheim
        operationalLocation:
          address:
            zipCode: 68163
            country: Germany
            city: Mannheim
            street: Coblitzallee
          companyName: DHBW Innovation Center
          department: Administration
        student:
          firstName: Max
          lastName: Mustermann
          registrationNumber: "1234567"
          course: TINF22IT1
          id: 83791
          title: Herr
        inCompanySupervisor:
          firstName: Erika
          lastName: Musterfrau
          phoneNumber: +49 0621000000
          academicDegree: Master of Science
          title: Frau
          academicTitle: Prof. Dr.
          email: erika.musterfrau@dhbw-mannheim.de
        topic: Thesis mangagement systems and their importance for universities
        id: 38729
        partnerCompany:
          address:
            zipCode: 68163
            city: Mannheim
            street: Coblitzallee
          name: DHBW Innovation Center
    ThesisSummary:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ThesisId"
        title:
          type: string
        studentFirstName:
          type: string
        studentLastName:
          type: string
      example:
        studentLastName: studentLastName
        id: 38729
        title: title
        studentFirstName: studentFirstName
    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        registrationStatus:
          type: object
          readOnly: true
          oneOf:
          - type: object
            properties:
              pending:
                $ref: "#/components/schemas/RegistrationToken"
          - type: object
            properties:
              completed:
                type: object
                nullable: true
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
          - student
          - supervisor
          - secretary
          - administrator
      example:
        firstName: firstName
        lastName: lastName
        registrationStatus: ""
        role: student
        id: 83791
        email: email
    ThesisId:
      type: integer
      format: int64
      readOnly: true
      example: 38729
    UserId:
      type: integer
      format: int64
      readOnly: true
      example: 83791
    RegistrationToken:
      type: string
      readOnly: true
      example: RANDOMIZED_TOKEN
    Comment:
      type: object
      properties:
        author:
          $ref: "#/components/schemas/UserId"
        message:
          type: string
          example: I really like your thesis. It sounds very interesting :)
      example:
        author: 83791
        message: I really like your thesis. It sounds very interesting :)
    inline_response_200:
      type: object
      properties:
        ok:
          type: array
          items:
            $ref: "#/components/schemas/User"
      example:
        ok:
        - firstName: firstName
          lastName: lastName
          registrationStatus: ""
          role: student
          id: 83791
          email: email
        - firstName: firstName
          lastName: lastName
          registrationStatus: ""
          role: student
          id: 83791
          email: email
    users_body:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        registrationToken:
          $ref: "#/components/schemas/RegistrationToken"
    inline_response_204:
      type: object
      properties:
        ok:
          type: array
          items:
            $ref: "#/components/schemas/UserId"
      example:
        ok:
        - 83791
        - 83791
    inline_response_200_1:
      type: object
      properties:
        ok:
          $ref: "#/components/schemas/User"
      example:
        ok:
          firstName: firstName
          lastName: lastName
          registrationStatus: ""
          role: student
          id: 83791
          email: email
    inline_response_204_1:
      type: object
      properties:
        ok:
          type: object
          nullable: true
      example:
        ok: {}
    inline_response_200_2:
      type: object
      properties:
        ok:
          $ref: "#/components/schemas/RegistrationToken"
      example:
        ok: RANDOMIZED_TOKEN
    inline_response_201:
      type: object
      properties:
        ok:
          $ref: "#/components/schemas/Thesis"
      example:
        ok:
          preparationPeriod:
            from: 2024-06-01T00:00:00+0000
            to: 2025-01-01T23:59:59+0000
          excludeSupervisorsFromCompanies:
          - Universität Mannheim
          operationalLocation:
            address:
              zipCode: 68163
              country: Germany
              city: Mannheim
              street: Coblitzallee
            companyName: DHBW Innovation Center
            department: Administration
          student:
            firstName: Max
            lastName: Mustermann
            registrationNumber: "1234567"
            course: TINF22IT1
            id: 83791
            title: Herr
          inCompanySupervisor:
            firstName: Erika
            lastName: Musterfrau
            phoneNumber: +49 0621000000
            academicDegree: Master of Science
            title: Frau
            academicTitle: Prof. Dr.
            email: erika.musterfrau@dhbw-mannheim.de
          topic: Thesis mangagement systems and their importance for universities
          id: 38729
          partnerCompany:
            address:
              zipCode: 68163
              city: Mannheim
              street: Coblitzallee
            name: DHBW Innovation Center
    inline_response_200_3:
      type: object
      properties:
        ok:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
      example:
        ok:
        - author: 83791
          message: I really like your thesis. It sounds very interesting :)
        - author: 83791
          message: I really like your thesis. It sounds very interesting :)
    inline_response_201_1:
      type: object
      properties:
        ok:
          $ref: "#/components/schemas/Comment"
      example:
        ok:
          author: 83791
          message: I really like your thesis. It sounds very interesting :)
    Thesis_student:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
        title:
          type: string
          example: Herr
        firstName:
          type: string
          example: Max
        lastName:
          type: string
          example: Mustermann
        registrationNumber:
          type: string
          example: "1234567"
        course:
          type: string
          example: TINF22IT1
      example:
        firstName: Max
        lastName: Mustermann
        registrationNumber: "1234567"
        course: TINF22IT1
        id: 83791
        title: Herr
    Thesis_preparationPeriod:
      type: object
      properties:
        from:
          type: string
          description: ISO-8601 timestamp
          example: 2024-06-01T00:00:00+0000
        to:
          type: string
          description: ISO-8601 timestamp
          example: 2025-01-01T23:59:59+0000
      example:
        from: 2024-06-01T00:00:00+0000
        to: 2025-01-01T23:59:59+0000
    Thesis_partnerCompany_address:
      type: object
      properties:
        street:
          type: string
          example: Coblitzallee
        zipCode:
          type: integer
          format: int32
          example: 68163
        city:
          type: string
          example: Mannheim
      example:
        zipCode: 68163
        city: Mannheim
        street: Coblitzallee
    Thesis_partnerCompany:
      type: object
      properties:
        name:
          type: string
          example: DHBW Innovation Center
        address:
          $ref: "#/components/schemas/Thesis_partnerCompany_address"
      example:
        address:
          zipCode: 68163
          city: Mannheim
          street: Coblitzallee
        name: DHBW Innovation Center
    Thesis_operationalLocation_address:
      type: object
      properties:
        street:
          type: string
          example: Coblitzallee
        zipCode:
          type: integer
          format: int32
          example: 68163
        city:
          type: string
          example: Mannheim
        country:
          type: string
          example: Germany
      example:
        zipCode: 68163
        country: Germany
        city: Mannheim
        street: Coblitzallee
    Thesis_operationalLocation:
      type: object
      properties:
        companyName:
          type: string
          example: DHBW Innovation Center
        department:
          type: string
          example: Administration
        address:
          $ref: "#/components/schemas/Thesis_operationalLocation_address"
      example:
        address:
          zipCode: 68163
          country: Germany
          city: Mannheim
          street: Coblitzallee
        companyName: DHBW Innovation Center
        department: Administration
    Thesis_inCompanySupervisor:
      type: object
      properties:
        title:
          type: string
          example: Frau
        academicTitle:
          type: string
          example: Prof. Dr.
        firstName:
          type: string
          example: Erika
        lastName:
          type: string
          example: Musterfrau
        phoneNumber:
          type: string
          example: +49 0621000000
        email:
          type: string
          example: erika.musterfrau@dhbw-mannheim.de
        academicDegree:
          type: string
          example: Master of Science
      example:
        firstName: Erika
        lastName: Musterfrau
        phoneNumber: +49 0621000000
        academicDegree: Master of Science
        title: Frau
        academicTitle: Prof. Dr.
        email: erika.musterfrau@dhbw-mannheim.de
  parameters:
    thesisId:
      name: thesisId
      in: path
      description: The thesis id
      required: true
      style: simple
      explode: false
      schema:
        $ref: "#/components/schemas/ThesisId"
    userId:
      name: userId
      in: path
      description: The user id
      required: true
      style: simple
      explode: false
      schema:
        $ref: "#/components/schemas/UserId"

