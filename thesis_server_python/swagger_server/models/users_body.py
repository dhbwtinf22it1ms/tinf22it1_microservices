# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.registration_token import RegistrationToken  # noqa: F401,E501
from swagger_server.models.user import User  # noqa: F401,E501
from swagger_server import util


class UsersBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user: User=None, registration_token: RegistrationToken=None):  # noqa: E501
        """UsersBody - a model defined in Swagger

        :param user: The user of this UsersBody.  # noqa: E501
        :type user: User
        :param registration_token: The registration_token of this UsersBody.  # noqa: E501
        :type registration_token: RegistrationToken
        """
        self.swagger_types = {
            'user': User,
            'registration_token': RegistrationToken
        }

        self.attribute_map = {
            'user': 'user',
            'registration_token': 'registrationToken'
        }
        self._user = user
        self._registration_token = registration_token

    @classmethod
    def from_dict(cls, dikt) -> 'UsersBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The users_body of this UsersBody.  # noqa: E501
        :rtype: UsersBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user(self) -> User:
        """Gets the user of this UsersBody.


        :return: The user of this UsersBody.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user: User):
        """Sets the user of this UsersBody.


        :param user: The user of this UsersBody.
        :type user: User
        """

        self._user = user

    @property
    def registration_token(self) -> RegistrationToken:
        """Gets the registration_token of this UsersBody.


        :return: The registration_token of this UsersBody.
        :rtype: RegistrationToken
        """
        return self._registration_token

    @registration_token.setter
    def registration_token(self, registration_token: RegistrationToken):
        """Sets the registration_token of this UsersBody.


        :param registration_token: The registration_token of this UsersBody.
        :type registration_token: RegistrationToken
        """

        self._registration_token = registration_token
