# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.thesis_operational_location_address import ThesisOperationalLocationAddress  # noqa: F401,E501
from swagger_server import util


class ThesisOperationalLocation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, company_name: str=None, department: str=None, address: ThesisOperationalLocationAddress=None):  # noqa: E501
        """ThesisOperationalLocation - a model defined in Swagger

        :param company_name: The company_name of this ThesisOperationalLocation.  # noqa: E501
        :type company_name: str
        :param department: The department of this ThesisOperationalLocation.  # noqa: E501
        :type department: str
        :param address: The address of this ThesisOperationalLocation.  # noqa: E501
        :type address: ThesisOperationalLocationAddress
        """
        self.swagger_types = {
            'company_name': str,
            'department': str,
            'address': ThesisOperationalLocationAddress
        }

        self.attribute_map = {
            'company_name': 'companyName',
            'department': 'department',
            'address': 'address'
        }
        self._company_name = company_name
        self._department = department
        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'ThesisOperationalLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Thesis_operationalLocation of this ThesisOperationalLocation.  # noqa: E501
        :rtype: ThesisOperationalLocation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self) -> str:
        """Gets the company_name of this ThesisOperationalLocation.


        :return: The company_name of this ThesisOperationalLocation.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name: str):
        """Sets the company_name of this ThesisOperationalLocation.


        :param company_name: The company_name of this ThesisOperationalLocation.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def department(self) -> str:
        """Gets the department of this ThesisOperationalLocation.


        :return: The department of this ThesisOperationalLocation.
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department: str):
        """Sets the department of this ThesisOperationalLocation.


        :param department: The department of this ThesisOperationalLocation.
        :type department: str
        """

        self._department = department

    @property
    def address(self) -> ThesisOperationalLocationAddress:
        """Gets the address of this ThesisOperationalLocation.


        :return: The address of this ThesisOperationalLocation.
        :rtype: ThesisOperationalLocationAddress
        """
        return self._address

    @address.setter
    def address(self, address: ThesisOperationalLocationAddress):
        """Sets the address of this ThesisOperationalLocation.


        :param address: The address of this ThesisOperationalLocation.
        :type address: ThesisOperationalLocationAddress
        """

        self._address = address
