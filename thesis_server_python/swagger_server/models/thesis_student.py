# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.user_id import UserId  # noqa: F401,E501
from swagger_server import util


class ThesisStudent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: UserId=None, title: str=None, first_name: str=None, last_name: str=None, registration_number: str=None, course: str=None):  # noqa: E501
        """ThesisStudent - a model defined in Swagger

        :param id: The id of this ThesisStudent.  # noqa: E501
        :type id: UserId
        :param title: The title of this ThesisStudent.  # noqa: E501
        :type title: str
        :param first_name: The first_name of this ThesisStudent.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this ThesisStudent.  # noqa: E501
        :type last_name: str
        :param registration_number: The registration_number of this ThesisStudent.  # noqa: E501
        :type registration_number: str
        :param course: The course of this ThesisStudent.  # noqa: E501
        :type course: str
        """
        self.swagger_types = {
            'id': UserId,
            'title': str,
            'first_name': str,
            'last_name': str,
            'registration_number': str,
            'course': str
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'registration_number': 'registrationNumber',
            'course': 'course'
        }
        self._id = id
        self._title = title
        self._first_name = first_name
        self._last_name = last_name
        self._registration_number = registration_number
        self._course = course

    @classmethod
    def from_dict(cls, dikt) -> 'ThesisStudent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Thesis_student of this ThesisStudent.  # noqa: E501
        :rtype: ThesisStudent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> UserId:
        """Gets the id of this ThesisStudent.


        :return: The id of this ThesisStudent.
        :rtype: UserId
        """
        return self._id

    @id.setter
    def id(self, id: UserId):
        """Sets the id of this ThesisStudent.


        :param id: The id of this ThesisStudent.
        :type id: UserId
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this ThesisStudent.


        :return: The title of this ThesisStudent.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this ThesisStudent.


        :param title: The title of this ThesisStudent.
        :type title: str
        """

        self._title = title

    @property
    def first_name(self) -> str:
        """Gets the first_name of this ThesisStudent.


        :return: The first_name of this ThesisStudent.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this ThesisStudent.


        :param first_name: The first_name of this ThesisStudent.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this ThesisStudent.


        :return: The last_name of this ThesisStudent.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this ThesisStudent.


        :param last_name: The last_name of this ThesisStudent.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def registration_number(self) -> str:
        """Gets the registration_number of this ThesisStudent.


        :return: The registration_number of this ThesisStudent.
        :rtype: str
        """
        return self._registration_number

    @registration_number.setter
    def registration_number(self, registration_number: str):
        """Sets the registration_number of this ThesisStudent.


        :param registration_number: The registration_number of this ThesisStudent.
        :type registration_number: str
        """

        self._registration_number = registration_number

    @property
    def course(self) -> str:
        """Gets the course of this ThesisStudent.


        :return: The course of this ThesisStudent.
        :rtype: str
        """
        return self._course

    @course.setter
    def course(self, course: str):
        """Sets the course of this ThesisStudent.


        :param course: The course of this ThesisStudent.
        :type course: str
        """

        self._course = course
