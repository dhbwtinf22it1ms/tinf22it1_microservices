{
  "runtime": "Net90",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.3\r\ninfo:\r\n  title: Thesis Management Software (users)\r\n  description: \"\"\r\n  version: 0.0.1\r\n\r\nservers:\r\n  - url: /api/v0\r\n\r\ntags:\r\n  - name: users\r\n    description: Manage users\r\n\r\ncomponents:\r\n  schemas:\r\n    Error:\r\n      type: object\r\n      properties:\r\n        error:\r\n          type: string\r\n          example: \"An error has occured.\"\r\n    User:\r\n      type: object\r\n      properties:\r\n        id:\r\n          $ref: '#/components/schemas/UserId'\r\n        registrationStatus:\r\n          type: object\r\n          readOnly: true\r\n          oneOf:\r\n            - type: object\r\n              properties:\r\n                pending:\r\n                  $ref: \"#/components/schemas/RegistrationToken\"\r\n            - type: object\r\n              properties:\r\n                completed:\r\n                  type: object\r\n                  nullable: true\r\n        firstName:\r\n          type: string\r\n        lastName:\r\n          type: string\r\n        email:\r\n          type: string\r\n        role:\r\n          type: string\r\n          enum: [student, supervisor, secretary, administrator]\r\n    UserId:\r\n      type: integer\r\n      format: int64\r\n      example: 83791\r\n      readOnly: true\r\n    RegistrationToken:\r\n      type: string\r\n      example: \"RANDOMIZED_TOKEN\"\r\n      readOnly: true\r\n\r\n  parameters:\r\n    userId:\r\n      name: userId\r\n      in: path\r\n      description: The user id\r\n      required: true\r\n      schema:\r\n        $ref: '#/components/schemas/UserId'\r\n\r\npaths:\r\n  /users:\r\n    get:\r\n      summary: List all users\r\n      tags: ['users']\r\n      responses:\r\n        '200':\r\n          description: Success\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  ok:\r\n                    type: array\r\n                    items:\r\n                      $ref: '#/components/schemas/User'\r\n    post:\r\n      summary: Create one or more users\r\n      description: Calling this endpoint will also generate a registration token resource for every user.\r\n        Each registration token will be emailed to the respective user automatically.\r\n      tags: ['users']\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  user:\r\n                    $ref: '#/components/schemas/User'\r\n                  registrationToken:\r\n                    $ref: '#/components/schemas/RegistrationToken'\r\n      responses:\r\n        '204':\r\n          description: Success. A list of all new user ids is returned. The order of users is retained from the request body array.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  ok:\r\n                    type: array\r\n                    items:\r\n                      $ref: '#/components/schemas/UserId'\r\n\r\n  /users/{userId}:\r\n    get:\r\n      summary: Get information about a specific user\r\n      tags: ['users']\r\n      parameters:\r\n        - $ref: \"#/components/parameters/userId\"\r\n        - name: registration_token\r\n          in: query\r\n          description: A user's registration token. This allows requests to this endpoint for a user with the same registration_token without any authentication.\r\n          required: false\r\n          schema:\r\n            $ref: '#/components/schemas/RegistrationToken'\r\n      responses:\r\n        '200':\r\n          description: Success\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  ok:\r\n                    $ref: '#/components/schemas/User'\r\n        '401':\r\n          description: Either a `registration_token` was provided, but it is not authorized to access the user with the requested `id` or no authentication was provided at all.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n        '404':\r\n          description: User with given `id` could not be found\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n    put:\r\n      summary: Update information for a specific user\r\n      tags: ['users']\r\n      parameters:\r\n        - $ref: \"#/components/parameters/userId\"\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/User'\r\n      responses:\r\n        '200':\r\n          description: Success. The newly updated user information is returned\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  ok:\r\n                    $ref: '#/components/schemas/User'\r\n        '404':\r\n          description: User with given `id` could not be found\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n    delete:\r\n      summary: Delete a specific user\r\n      tags: ['users']\r\n      parameters:\r\n        - $ref: \"#/components/parameters/userId\"\r\n      responses:\r\n        '204':\r\n          description: Success\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  ok:\r\n                    type: object\r\n                    nullable: true\r\n        '404':\r\n          description: User with given `id` could not be found.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n  /users/{userId}/regenerate_registration_token:\r\n    post:\r\n      summary: Regenerate a specific user's registration token\r\n      description: This endpoint is used to regenerate a new registration token for a specific user that exists already.\r\n        Calling this endpoint also causes the user to receive an email notification with the new registration token.\r\n      tags: ['users']\r\n      parameters:\r\n        - $ref: \"#/components/parameters/userId\"\r\n      responses:\r\n        '200':\r\n          description: Success\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  ok:\r\n                    $ref: '#/components/schemas/RegistrationToken'\r\n        '404':\r\n          description: User with given `id` could not be found.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n        '409':\r\n          description: User has registered already.\r\n            Registered users are not eligible for new registration tokens Registered users are not eligible for new registration tokens.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n",
      "url": "",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToTypeScriptClient": {
      "className": "{controller}Client",
      "moduleName": "",
      "namespace": "",
      "typeScriptVersion": 2.7,
      "template": "Fetch",
      "promiseType": "Promise",
      "httpClass": "HttpClient",
      "withCredentials": false,
      "useSingletonProvider": false,
      "injectionTokenType": "OpaqueToken",
      "rxJsVersion": 6.0,
      "dateTimeType": "Date",
      "nullValue": "Undefined",
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateOptionalParameters": false,
      "exportTypes": true,
      "wrapDtoExceptions": false,
      "exceptionClass": "ApiException",
      "clientBaseClass": null,
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "protectedMethods": [],
      "configurationClass": null,
      "useTransformOptionsMethod": false,
      "useTransformResultMethod": false,
      "generateDtoTypes": true,
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "markOptionalProperties": true,
      "generateCloneMethod": false,
      "typeStyle": "Class",
      "enumStyle": "Enum",
      "useLeafType": false,
      "classTypes": [],
      "extendedClasses": [],
      "extensionCode": null,
      "generateDefaultValues": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateTypeCheckFunctions": false,
      "generateConstructorInterface": true,
      "convertConstructorInterfaceData": false,
      "importRequiredTypes": true,
      "useGetBaseUrlMethod": false,
      "baseUrlTokenName": "API_BASE_URL",
      "queryNullValue": "",
      "useAbortSignal": false,
      "inlineNamedDictionaries": false,
      "inlineNamedAny": false,
      "includeHttpContext": false,
      "templateDirectory": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "GeneratorOutput/TsClient",
      "newLineBehavior": "Auto"
    },
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "suppressClientClassesOutput": false,
      "generateClientInterfaces": false,
      "suppressClientInterfacesOutput": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "propertySetterAccessModifier": "",
      "generateNativeRecords": false,
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}Client",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Dhbw.ThesisManager.Client",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "GeneratorOutput/CsUserClient",
      "newLineBehavior": "Auto"
    },
    "openApiToCSharpController": {
      "controllerBaseClass": null,
      "controllerStyle": "Partial",
      "controllerTarget": "AspNetCore",
      "useCancellationToken": true,
      "useActionResultType": false,
      "generateModelValidationAttributes": true,
      "routeNamingStrategy": "None",
      "basePath": null,
      "className": "{controller}",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Dhbw.ThesisManager.Api",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.List",
      "arrayInstanceType": "System.Collections.Generic.List",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [
        "User",
        "Error",
        "Thesis",
        "RegistrationToken"
      ],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "Dhbw.ThesisManager/Dhbw.ThesisManager.Api/Controller/UserController.cs",
      "newLineBehavior": "Auto"
    }
  }
}