# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SendemailBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, sender: str=None, recipients: List[str]=None, subject: str=None, body: str=None, username: str=None, password: str=None):  # noqa: E501
        """SendemailBody - a model defined in Swagger

        :param sender: The sender of this SendemailBody.  # noqa: E501
        :type sender: str
        :param recipients: The recipients of this SendemailBody.  # noqa: E501
        :type recipients: List[str]
        :param subject: The subject of this SendemailBody.  # noqa: E501
        :type subject: str
        :param body: The body of this SendemailBody.  # noqa: E501
        :type body: str
        :param username: The username of this SendemailBody.  # noqa: E501
        :type username: str
        :param password: The password of this SendemailBody.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {
            'sender': str,
            'recipients': List[str],
            'subject': str,
            'body': str,
            'username': str,
            'password': str
        }

        self.attribute_map = {
            'sender': 'sender',
            'recipients': 'recipients',
            'subject': 'subject',
            'body': 'body',
            'username': 'username',
            'password': 'password'
        }
        self._sender = sender
        self._recipients = recipients
        self._subject = subject
        self._body = body
        self._username = username
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'SendemailBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The sendemail_body of this SendemailBody.  # noqa: E501
        :rtype: SendemailBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sender(self) -> str:
        """Gets the sender of this SendemailBody.


        :return: The sender of this SendemailBody.
        :rtype: str
        """
        return self._sender

    @sender.setter
    def sender(self, sender: str):
        """Sets the sender of this SendemailBody.


        :param sender: The sender of this SendemailBody.
        :type sender: str
        """

        self._sender = sender

    @property
    def recipients(self) -> List[str]:
        """Gets the recipients of this SendemailBody.


        :return: The recipients of this SendemailBody.
        :rtype: List[str]
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients: List[str]):
        """Sets the recipients of this SendemailBody.


        :param recipients: The recipients of this SendemailBody.
        :type recipients: List[str]
        """

        self._recipients = recipients

    @property
    def subject(self) -> str:
        """Gets the subject of this SendemailBody.


        :return: The subject of this SendemailBody.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject: str):
        """Sets the subject of this SendemailBody.


        :param subject: The subject of this SendemailBody.
        :type subject: str
        """

        self._subject = subject

    @property
    def body(self) -> str:
        """Gets the body of this SendemailBody.


        :return: The body of this SendemailBody.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body: str):
        """Sets the body of this SendemailBody.


        :param body: The body of this SendemailBody.
        :type body: str
        """

        self._body = body

    @property
    def username(self) -> str:
        """Gets the username of this SendemailBody.


        :return: The username of this SendemailBody.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this SendemailBody.


        :param username: The username of this SendemailBody.
        :type username: str
        """

        self._username = username

    @property
    def password(self) -> str:
        """Gets the password of this SendemailBody.


        :return: The password of this SendemailBody.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this SendemailBody.


        :param password: The password of this SendemailBody.
        :type password: str
        """

        self._password = password
