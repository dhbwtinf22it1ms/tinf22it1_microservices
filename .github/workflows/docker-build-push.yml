name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'src/dotnet/**'
      - '.github/workflows/docker-build-push.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/dotnet/**'
      - '.github/workflows/docker-build-push.yml'

env:
  REGISTRY: dhbw.docker.kluger.net
  # Base name for the Docker images
  IMAGE_BASE_NAME: dhbw-thesis-manager

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the private Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Setup
        id: meta-setup
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-setup
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push Setup image
        uses: docker/build-push-action@v5
        with:
          context: ./src/dotnet
          file: ./src/dotnet/Dhbw.ThesisManager/Setup/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-setup.outputs.tags }}
          labels: ${{ steps.meta-setup.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata (tags, labels) for Notification Service
        id: meta-notification
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-notification
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push Notification Service image
        uses: docker/build-push-action@v5
        with:
          context: ./src/dotnet
          file: ./src/dotnet/Dhbw.ThesisManager/Dhbw.ThesisManager.NotificationService/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-notification.outputs.tags }}
          labels: ${{ steps.meta-notification.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata (tags, labels) for API Service
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-api
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
  
      - name: Build and push API Service image
        uses: docker/build-push-action@v5
        with:
          context: ./src/dotnet
          file: ./src/dotnet/Dhbw.ThesisManager/Dhbw.ThesisManager.Api/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  