# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class GenericBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: List[str]=None, mail_addresses: List[str]=None, mail_subject: str=None, mail_text: str=None):  # noqa: E501
        """GenericBody - a model defined in Swagger

        :param name: The name of this GenericBody.  # noqa: E501
        :type name: List[str]
        :param mail_addresses: The mail_addresses of this GenericBody.  # noqa: E501
        :type mail_addresses: List[str]
        :param mail_subject: The mail_subject of this GenericBody.  # noqa: E501
        :type mail_subject: str
        :param mail_text: The mail_text of this GenericBody.  # noqa: E501
        :type mail_text: str
        """
        self.swagger_types = {
            'name': List[str],
            'mail_addresses': List[str],
            'mail_subject': str,
            'mail_text': str
        }

        self.attribute_map = {
            'name': 'name',
            'mail_addresses': 'mailAddresses',
            'mail_subject': 'mailSubject',
            'mail_text': 'mailText'
        }
        self._name = name
        self._mail_addresses = mail_addresses
        self._mail_subject = mail_subject
        self._mail_text = mail_text

    @classmethod
    def from_dict(cls, dikt) -> 'GenericBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The generic_body of this GenericBody.  # noqa: E501
        :rtype: GenericBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> List[str]:
        """Gets the name of this GenericBody.

        Name of the recipient  # noqa: E501

        :return: The name of this GenericBody.
        :rtype: List[str]
        """
        return self._name

    @name.setter
    def name(self, name: List[str]):
        """Sets the name of this GenericBody.

        Name of the recipient  # noqa: E501

        :param name: The name of this GenericBody.
        :type name: List[str]
        """

        self._name = name

    @property
    def mail_addresses(self) -> List[str]:
        """Gets the mail_addresses of this GenericBody.

        List of email addresses  # noqa: E501

        :return: The mail_addresses of this GenericBody.
        :rtype: List[str]
        """
        return self._mail_addresses

    @mail_addresses.setter
    def mail_addresses(self, mail_addresses: List[str]):
        """Sets the mail_addresses of this GenericBody.

        List of email addresses  # noqa: E501

        :param mail_addresses: The mail_addresses of this GenericBody.
        :type mail_addresses: List[str]
        """

        self._mail_addresses = mail_addresses

    @property
    def mail_subject(self) -> str:
        """Gets the mail_subject of this GenericBody.

        Subject of the email  # noqa: E501

        :return: The mail_subject of this GenericBody.
        :rtype: str
        """
        return self._mail_subject

    @mail_subject.setter
    def mail_subject(self, mail_subject: str):
        """Sets the mail_subject of this GenericBody.

        Subject of the email  # noqa: E501

        :param mail_subject: The mail_subject of this GenericBody.
        :type mail_subject: str
        """

        self._mail_subject = mail_subject

    @property
    def mail_text(self) -> str:
        """Gets the mail_text of this GenericBody.

        Body of the email  # noqa: E501

        :return: The mail_text of this GenericBody.
        :rtype: str
        """
        return self._mail_text

    @mail_text.setter
    def mail_text(self, mail_text: str):
        """Sets the mail_text of this GenericBody.

        Body of the email  # noqa: E501

        :param mail_text: The mail_text of this GenericBody.
        :type mail_text: str
        """

        self._mail_text = mail_text
