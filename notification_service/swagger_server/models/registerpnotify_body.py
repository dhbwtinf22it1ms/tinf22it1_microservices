# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RegisterpnotifyBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, names: List[str]=None, mail_addresses: List[str]=None, codes: List[str]=None):  # noqa: E501
        """RegisterpnotifyBody - a model defined in Swagger

        :param names: The names of this RegisterpnotifyBody.  # noqa: E501
        :type names: List[str]
        :param mail_addresses: The mail_addresses of this RegisterpnotifyBody.  # noqa: E501
        :type mail_addresses: List[str]
        :param codes: The codes of this RegisterpnotifyBody.  # noqa: E501
        :type codes: List[str]
        """
        self.swagger_types = {
            'names': List[str],
            'mail_addresses': List[str],
            'codes': List[str]
        }

        self.attribute_map = {
            'names': 'names',
            'mail_addresses': 'mailAddresses',
            'codes': 'codes'
        }
        self._names = names
        self._mail_addresses = mail_addresses
        self._codes = codes

    @classmethod
    def from_dict(cls, dikt) -> 'RegisterpnotifyBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The registerpnotify_body of this RegisterpnotifyBody.  # noqa: E501
        :rtype: RegisterpnotifyBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def names(self) -> List[str]:
        """Gets the names of this RegisterpnotifyBody.

        List of names  # noqa: E501

        :return: The names of this RegisterpnotifyBody.
        :rtype: List[str]
        """
        return self._names

    @names.setter
    def names(self, names: List[str]):
        """Sets the names of this RegisterpnotifyBody.

        List of names  # noqa: E501

        :param names: The names of this RegisterpnotifyBody.
        :type names: List[str]
        """

        self._names = names

    @property
    def mail_addresses(self) -> List[str]:
        """Gets the mail_addresses of this RegisterpnotifyBody.

        List of email addresses  # noqa: E501

        :return: The mail_addresses of this RegisterpnotifyBody.
        :rtype: List[str]
        """
        return self._mail_addresses

    @mail_addresses.setter
    def mail_addresses(self, mail_addresses: List[str]):
        """Sets the mail_addresses of this RegisterpnotifyBody.

        List of email addresses  # noqa: E501

        :param mail_addresses: The mail_addresses of this RegisterpnotifyBody.
        :type mail_addresses: List[str]
        """

        self._mail_addresses = mail_addresses

    @property
    def codes(self) -> List[str]:
        """Gets the codes of this RegisterpnotifyBody.

        List of login codes  # noqa: E501

        :return: The codes of this RegisterpnotifyBody.
        :rtype: List[str]
        """
        return self._codes

    @codes.setter
    def codes(self, codes: List[str]):
        """Sets the codes of this RegisterpnotifyBody.

        List of login codes  # noqa: E501

        :param codes: The codes of this RegisterpnotifyBody.
        :type codes: List[str]
        """

        self._codes = codes
